<?php
/**
 *
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 */

class Comment {

	/**
	 *
	 * @var int
	 * @access public
	 */
	public  $idComment;

	/**
	 *
	 * @var String
	 * @access public
	 */
	public  $contentComment;

	public $datetimeComment;

	/**
	 *
	 * @var int
	 * @access public
	 */
	public  $idUser;

	/**
	 *
	 * @var
	 * @access public
	 */
	public  $idArticle;



	/**
	 * @access private
	 * @return void
	 */

	private  function __construct() {

	}


	/**
	 * @access public
	 * @param String $name
	 * @return Multiple
	 */

	public  function __get($name) {
		if(property_exists(__CLASS__, $name)){
			return $this->$name;
		}
		throw new Exception("L'attribut {$name} n'existe pas");
	}


	/**
	 * @access public
	 * @param int $idComment
	 * @return Comment
	 */

	public static function getComment($idComment) {
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("SELECT * FROM " . PREFIXTABLE ."comment WHERE idComment = ?");
		$pdo->setFetchMode(PDO::FETCH_CLASS, __CLASS__);

		$pdo->execute(array($idComment));

		$res = $pdo->fetch();

		if(empty($res)){
			return false;
		}

		return $res;
	}


	/**
	 * @access public
	 * @return Comment()
	 */

	public static function getComments() {
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("SELECT * FROM " . PREFIXTABLE ."comment");
		$pdo->setFetchMode(PDO::FETCH_CLASS, __CLASS__);

		$pdo->execute();

		$res = $pdo->fetchAll();

		if(empty($res)){
			return false;
		}

		return $res;
	}

	public static function getCommentsPerArticle($idArticle, $limit = null) {
		$bdd = MyPDO::getInstance();

		$req = "";

		if(!is_null($limit)){
            $req = " LIMIT " . $limit['limit'] . " OFFSET " . $limit['offset'];
        }

		$pdo = $bdd->prepare("SELECT * FROM " . PREFIXTABLE ."comment WHERE idArticle = ?" . $req);
		$pdo->setFetchMode(PDO::FETCH_CLASS, __CLASS__);

		$pdo->execute(array($idArticle));

		$res = $pdo->fetchAll();

		if(empty($res)){
			return false;
		}

		return $res;
	}

	public static function countComments($idArticle){
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("SELECT COUNT(*) as nbComments FROM " . PREFIXTABLE ."comment WHERE idArticle = ?");
		$pdo->execute([$idArticle]);

		return $pdo->fetch()['nbComments'];
	}

	public static function displayComments($comments){
		$html = '<div>';

		$comments = self::getCommentsPerArticle($idArticle);

		if($comments){
			foreach ($comments as $comment) {
				$contentComment = nl2br($comment->contentComment);
				$html .= <<<HTML
				<p>
					$contentComment
				</p>
HTML;
			}
		} else {
			$html .= "<p>Aucun commentaire</p>";
		}

		$html .= '</div>';

		return $html;
	}

	public static function displayCommentsAdmin($idArticle){
		$html = <<<HTML
		<div class="table-responsive">
			<table class="table table-bordered table-striped">
				<tr>
					<th>Commentaire</th>
					<th>Modifier</th>
					<th>Supprimer</th>
				</tr>
HTML;

		$comments = self::getCommentsPerArticle($idArticle);

		if($comments){
			foreach ($comments as $comment) {
				$contentComment = nl2br($comment->contentComment);
				$td = <<<HTML
					<td>$contentComment</td>
HTML;

				if($_SESSION['user']->editComment || $_SESSION['user']->isAdministrator){
					$td .= <<<HTML
					<td><a href="?idA=$idArticle&idC={$comment->idComment}&a=e">Modifier</a></td>
HTML;
				} else {
					$td .= <<<HTML
					<td>Modifier</td>
HTML;
				}

				if($_SESSION['user']->deleteComment || $_SESSION['user']->isAdministrator){
					$td .= <<<HTML
					<td><a href="?idA=$idArticle&idC={$comment->idComment}&a=d">Supprimer</a></td>
HTML;
				} else {
					$td .= <<<HTML
					<td>Supprimer</td>
HTML;
				}

				$html .= <<<HTML
				<tr>
					$td
				</tr>
HTML;
			}
		} else {
			$html .= "<p>Aucun commentaire</p>";
		}

		$html .= '</table></div>';

		return $html;
	}

	public static function displayPagination($pageActu, $pageMax, $idArticle){
        $html = <<<HTML
        <ul class="pagination">
HTML;
        if($pageActu > 1){
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=1">&laquo;</a>
            </li>
            <li>
                <a href="?idA=$idArticle&p=1">1</a>
            </li>
HTML;
        } else {
            $html .= <<<HTML
            <li class="disabled">
                <a href="?idA=$idArticle&p=1">&laquo;</a>
            </li>
            <li class="disabled">
                <a href="?idA=$idArticle&p=1">1</a>
            </li>
HTML;
        }

        if($pageActu > 3){
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=2">2</a>
            </li>
HTML;
        }

        if($pageActu > 4){
            $html .= <<<HTML
            <li class="disabled">
                <a href="#">...</a>
            </li>
HTML;
        }


        if($pageActu > 2){
            $pageActuMoinsUn = $pageActu - 1;
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=$pageActuMoinsUn">$pageActuMoinsUn</a>
            </li>
HTML;
        }

        if($pageActu > 1){
            $html .= <<<HTML
            <li class="disabled">
                <a href="?idA=$idArticle&p=$pageActu">$pageActu</a>
            </li>
HTML;
        }


        if($pageActu < $pageMax){
            $pageActuPlusUn = $pageActu + 1;
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=$pageActuPlusUn">$pageActuPlusUn</a>
            </li>
HTML;
        }
        if($pageActu < $pageMax - 3){
            $pageMaxMoinsUn = $pageMax - 1;
            $html .= <<<HTML
            <li class="disabled">
                <a href="#">...</a>
            </li>
            <li>
                <a href="?idA=$idArticle&p=$pageMaxMoinsUn">$pageMaxMoinsUn</a>
            </li>
HTML;
        } elseif($pageActu < $pageMax - 2){
            $pageMaxMoinsUn = $pageMax - 1;
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=$pageMaxMoinsUn">$pageMaxMoinsUn</a>
            </li>
HTML;
        }

        if($pageActu < $pageMax){
            if($pageActu != $pageMax - 1){
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=$pageMax">$pageMax</a>
            </li>
HTML;
            }
            $html .= <<<HTML
            <li>
                <a href="?idA=$idArticle&p=$pageMax">&raquo;</a>
            </li>
HTML;
        } else {
            $html .= <<<HTML
            <li class="disabled">
                <a href="?idA=$idArticle&p=$pageMax">&raquo;</a>
            </li>
HTML;
        }

        $html .= "</ul>";
        return <<<HTML
        <div class="row text-center">
        	<div class="col-md-4 col-md-offset-4">
        		$html
        	</div>
        </div>
HTML;
    }

	public static function formAddComment($data = array(), $info = "")
	{
		$id = $_GET['idA'];
		$content = isset($data['content']) ? $data['content'] : "";
		$html = <<<HTML
			<div class="row">
				<div class="col-md-6 col-md-offset-3">
					<form action="?idA=$id" method="post" class="form-horizontal text-center">
						$info
						<p>Rédiger un commentaire:</p>
						<textarea name="content" class="form-control" rows="3" required>$content</textarea>
						<div class="form-group">
			                <label for="captcha" class="control-label col-md-6">Saisissez les lettres de l'image: </label>
			                <div class="col-md-4"><input type="text" name="captcha" id="captcha" placeholder="Captcha" class="form-control" required></div>
			                <div class="col-md-2"><img src="captcha.php" alt="captcha"></div>
						</div>
						<input type="submit" name="formAddComment" class="btn btn-default">
					</form>
				</div>
			</div>
HTML;

		return $html;
	}

	public static function addComment($data, $idArticle)
	{
		$bdd = MyPDO::getInstance();

        if($data['captcha'] != $_SESSION['captcha'])
            return false;

		$pdo = $bdd->prepare("INSERT INTO " . PREFIXTABLE ."comment VALUES(NULL, ?, NOW(), ?, ?)");
		$pdo->execute(array(htmlentities($data['content']), $idArticle, $_SESSION['user']->idUser));

		return true;
	}

	public function formEditComment($data = array(), $info = "")
	{
		$idA = $_GET['idA'];
		$content = isset($data['content']) ? nl2br($data['content']) : nl2br($this->contentComment);
		$html = <<<HTML

			<div class="col-md-6 col-md-offset-3">
				<form action="?idA=$idA&idC={$this->idComment}&a=e" method="post" class="form-horizontal text-center">
					$info
					<p>Rédiger un commentaire:</p>
					<textarea name="content" class="form-control" rows="3">$content</textarea>
					<input type="submit" name="formEditComment" class="btn btn-default">
				</form>
			</div>
HTML;

		return $html;
	}

	public  function editComment($data)
	{
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("UPDATE " . PREFIXTABLE ."comment SET contentComment = ? WHERE idComment = ?");
		$pdo->execute(array(htmlentities($data['content']), $this->idComment));

		return true;
	}

	public function formDeleteComment()
	{
		$idA = $_GET['idA'];
		$content = isset($data['content']) ? nl2br($data['content']) : nl2br($this->contentComment);
		$user = User::getUser($this->idUser);
		$datetime = strftime("le %d/%m/%Y à %T ", strtotime($this->datetimeComment));
		$html = <<<HTML
			<div class="col-md-8 col-md-offset-2 text-center">
				<form action="?idA=$idA&idC={$this->idComment}&a=d" method="post" class="form-inline">
					<p>Supprimer le commentaire ?</p>
	                <div class="row">
	                    <div class="col-md-10 col-md-offset-1 text-left">
	                        <div class="panel panel-default">
	                            <div class="panel-body">
									$content
								</div>
								<div class="panel-footer text-right">
                                	Ecrit par {$user->nicknameUser} $datetime
								</div>
							</div>
						</div>
					</div>
					<input type="submit" name="formDeleteComment" value="Supprimer" class="btn btn-primary">
					<input type="submit" name="cancelDeleteComment" value="Annuler" class="btn btn-danger">
				</form>
			</div>
HTML;

		return $html;
	}

	public  function deleteComment()
	{
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("DELETE FROM " . PREFIXTABLE ."comment WHERE idComment = ?");
		$pdo->execute(array($this->idComment));

		return true;
	}
}
?>
