<?php
/**
 *
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 */

class Category {

	/**
	 *
	 * @var int
	 * @access public
	 */
	public  $idCategory;

	/**
	 *
	 * @var String
	 * @access public
	 */
	public  $lblCategory;

	/**
	 *
	 * @var int
	 * @access public
	 */
	public  $idCategoryParent;

	/**
	 * @var array
	 */
	public $categoryChildren;


	/**
	 * @access private
	 * @return void
	 */

	private  function __construct() {

	}


	/**
	 * @access public
	 * @param String $name
	 * @return Multiple
	 */

	public  function __get($name) {
		if(property_exists(__CLASS__, $name)){
			return $this->$name;
		}
		throw new Exception("L'attribut {$name} n'existe pas");
	}



	/**
	 * @access public
	 * @param int $idCategory
	 * @return Category
	 */

	public static function getCategory($idCategory) {
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("SELECT * FROM category WHERE idCategory = ?");
		$pdo->execute(array($idCategory));
		$pdo->setFetchMode(PDO::FETCH_CLASS, __CLASS__);

		$res = $pdo->fetch();

		if(empty($res)){
			return false;
		}

		$res->getCategorysChildren();

		return $res;
	}


	public static function getCategorys($parent = false) {
		$bdd = MyPDO::getInstance();

		if($parent){
			$req = " WHERE idCategoryParent IS NULL";
		} else {
			$req = "";
		}

		$pdo = $bdd->prepare("SELECT * FROM category" . $req);
		$pdo->execute();

		$res = $pdo->fetchAll(PDO::FETCH_CLASS, __CLASS__);

		if(empty($res)){
			return false;
		}

		foreach ($res as $category) {
			$category->getCategorysChildren();
			$categorys[] = $category;
		}

		return $categorys;
	}


	/**
	 * @access public
	 * @return Category()
	 */

	public function getCategorysChildren() {
		$bdd = MyPDO::getInstance();

		$pdo = $bdd->prepare("SELECT * FROM category WHERE idCategoryParent = ?");
		$pdo->execute(array($this->idCategory));

		$res = $pdo->fetchAll(PDO::FETCH_CLASS, __CLASS__);

		if(empty($res)){
			return false;
		}

		foreach ($res as $category) {
			$category->getCategorysChildren();
			$categorys[] = $category;
		}

		if(!isset($categorys)){
			return array();
		}

		$this->categoryChildren = $categorys;
	}

	public static function formAddCategory($data = array(), $info = ""){

		$categorys = Category::getCategorys();

		$lblCategory = isset($data['lblCategory']) ? $data['lblCategory'] : "";
		$categoryParent = isset($data['categoryParent']) ? $data['categoryParent'] : "";

		$select = "<select name=category>";
		$select .= "<option value=''>Aucune catégorie parent</option>";

		if($categorys){
			foreach ($categorys as $category) {
				if($category->lblCategory == $categoryParent){
					$select .= "<option value=" . $category->idCategory . " selected>" . $category->lblCategory . "</option>";
				} else {
					$select .= "<option value=" . $category->idCategory . ">" . $category->lblCategory . "</option>";
				}
			}
		}

		$select .= "</select>";

		$html = <<<HTML
		<form action="" method="post">
			$info
			<input type="text" name="lblCategory" placeholder="Nom de la catégorie" pattern=".{1,}">
			$select
			<input type="submit" name="formAddCategory" value="Ajouter">
		</form>
HTML;
		return $html;
	}

	public static function addCategory($data = ""){
		if(strlen($data['lblCategory']) == 0){
			return false;
		}

		if($data['category'] == "" || !Category::getCategory($data['category'])){
			$data['category'] = null;
		}

		$bdd = MyPDO::getInstance();
		$pdo = $bdd->prepare("INSERT INTO category VALUES(NULL, ?, ?)");
		$pdo->execute(array($data['lblCategory'], $data['category']));

		return true;
	}

	public function formEditCategory($data = array(), $info = ""){
		$categorys = Category::getCategorys();

		$lblCategory = isset($data['lblCategory']) ? $data['lblCategory'] : $this->lblCategory;
		$categoryParent = isset($data['categoryParent']) ? $data['categoryParent'] : "";

		$select = "<select name=category>";
		$select .= "<option value=''>Aucune catégorie parent</option>";

		$listChildren = array();
		foreach ($categorys as $category) {
			if($category->idCategory !== $this->idCategory){
				if($category->idCategoryParent == $this->idCategory){
					if(!is_null($category->categoryChildren))
						$listChildren = $category->getIdChildren();
				}

				if(!in_array($category->idCategory, $listChildren) && $category->idCategoryParent !== $this->idCategory){
					if($this->idCategoryParent == $category->idCategory){
						$select .= "<option value=" . $category->idCategory . " selected>" . $category->lblCategory . "</option>";
					} else {
						$select .= "<option value=" . $category->idCategory . ">" . $category->lblCategory . "</option>";
					}
				}
			}
		}

		$select .= "</select>";

		$html = <<<HTML
		<form action="" method="post">
			$info
			<input type="text" name="lblCategory" placeholder="Nom de la catégorie" value=$lblCategory pattern=".{1,}">
			$select
			<input type="submit" name="formAddCategory" value="Modifier">
		</form>
HTML;
		return $html;
	}

	public function getIdChildren(){
		if(!is_null($this->categoryChildren)){
			foreach($this->categoryChildren as $categoryChild){
				$list[] = $categoryChild->idCategory;
				$list[] = $categoryChild->getIdChildren();
			}
			return $list;
		}
	}

	public static function displayCategorys(){
		$categorys = Category::getCategorys(true);
		$html = "<table>";

		foreach ($categorys as $category) {
			$html .= <<<HTML
			<tr>
				<td>{$category->lblCategory}</td>
				<td><a href="category.php?id={$category->idCategory}&a=edit">Modifier</a></td>
				<td><a href="category.php?id={$category->idCategory}&a=delete">Supprimer</a></td>
			</tr>
HTML;
			if(!is_null($category->categoryChildren))
				$html .= $category->displayCategorysChildren();
		}

		$html .= "</table>";

		return $html;
	}

	public function displayCategorysChildren(){
		$html = "";


		foreach ($this->categoryChildren as $categoryChild) {
			$html .= <<<HTML
			<tr>
				<td>{$categoryChild->lblCategory}</td>
				<td><a href="category.php?id={$categoryChild->idCategory}&a=edit">Modifier</a></td>
				<td><a href="category.php?id={$categoryChild->idCategory}&a=delete">Supprimer</a></td>
			</tr>
HTML;

			//$html .= "<tr><td>" . $categoryChild->lblCategory . "</td><td><a href='?category.php?id=" . $categoryChild->idCategory . "&a=edit>" . "</tr>";
			if(!is_null($categoryChild->categoryChildren))
				$html .= $categoryChild->displayCategorysChildren();

		}

		return $html;
	}

	public static function displayMenuCategorys(){
		$categorys = Category::getCategorys(true);
		$html = "<ul>";

		foreach ($categorys as $category) {
			$html .= "<li><a href='category.php?id=" . $category->idCategory . "'>" . $category->lblCategory . "</a></li>";
			if(!is_null($category->categoryChildren))
				$html .= $category->displayMenuCategorysChildren();

		}

		$html .= "</ul>";

		return $html;
	}

	public function displayMenuCategorysChildren(){
		$html = "<ul>";

		foreach ($this->categoryChildren as $categoryChild) {
			$html .= "<li><a href='category.php?id=" . $categoryChild->idCategory . "'>" . $categoryChild->lblCategory . "</a></li>";
			if(!is_null($categoryChild->categoryChildren))
				$html .= $categoryChild->displayMenuCategorysChildren();
		}

		$html .= "</ul>";

		return $html;
	}

	public static function displayArticleCategorys($idCategory = null){
		$categorys = Category::getCategorys(true);
		$html = "<ul>";

		foreach ($categorys as $category) {
			$checked = "";
			if($category->idCategory == $idCategory){
				$checked = "checked";
			}
			$html .= "<li><label><input type='radio' name='category' value=" . $category->idCategory . " $checked required>" . $category->lblCategory . "</label></li>";
			if(!is_null($category->categoryChildren))
				$html .= $category->displayArticleCategorysChildren($idCategory);

		}

		$html .= "</ul>";

		return $html;
	}

	public function displayArticleCategorysChildren($idCategory = null){
		$html = "<ul>";

		foreach ($this->categoryChildren as $categoryChild) {
			$checked = "";
			if($categoryChild->idCategory == $idCategory){
				$checked = "checked";
			}
			$html .= "<li><label><input type='radio' name='category' value=" . $categoryChild->idCategory . " $checked required>" . $categoryChild->lblCategory . "</label></li>";
			if(!is_null($categoryChild->categoryChildren))
				$html .= $categoryChild->displayArticleCategorysChildren($idCategory);
		}

		$html .= "</ul>";

		return $html;
	}


}
?>
