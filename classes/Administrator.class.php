<?php
/**
 * Classe enfant de User
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 * @see        User
 */
require_once('User.class.php');
require_once('Category.class.php');

class Administrator extends User {


	public function __construct($user){
		$this->idUser = $user->idUser;
		$this->nicknameUser = $user->nicknameUser;
		$this->emailUser = $user->emailUser;
		$this->validUser = $user->validUser;
		$this->redacArticle = $user->redacArticle;
		$this->editOwnArticle = $user->editOwnArticle;
		$this->deleteOwnArticle = $user->deleteOwnArticle;
		$this->editComment = $user->editComment;
		$this->deleteComment = $user->deleteComment;
		$this->isAdministrator = $user->isAdministrator;
	}

	public function formOptionsSite($data = array(), $infos = ""){
		if(sizeof($data) == 0)
			$data = Site::getOptions();

		$siteName = $data['siteName'];
		$siteDescription = $data['siteDescription'];
		$adminEmail = $data['adminEmail'];
		$articlesPerPage = $data['articlesPerPage'];
		$commentsPerPage = $data['commentsPerPage'];
		$theme = $data['theme'];
		$html = <<<HTML
		<form action="" method="post">
			<input type="text" name="siteName" placeholder="Nom du site" value="$siteName">
			<input type="text" name="siteDescription" placeholder="Nom du site" value="$siteDescription">
			<input type="text" name="adminEmail" placeholder="Nom du site" value="$adminEmail">
			<input type="number" name="articlesPerPage" placeholder="Nom du site" value="$articlesPerPage">
			<input type="number" name="commentsPerPage" placeholder="Nom du site" value="$commentsPerPage">
			<input type="text" name="theme" placeholder="Nom du site" value="$theme">
			<input type="submit" name="formOptionsSite">
		</form>
HTML;
		return $html;
	}



	public function editOptionSite($data){

	}

	/**
	 * Supprime un utilisateur
	 * @access public
	 * @param int $idUser ID de l'utilisateur à supprimer
	 * @return void
	 */

	/*public  function deleteUser($idUser) {

	}*/


	/**
	 * Modifie les information d'un utilisateur
	 * @access public
	 * @param array $data Contient les nouvelles informations du profil de l'utilisateur
	 * @return void
	 */

	public  function editProfileUser($data) {

	}


	/**
	 * Envoyer un mail à un utilisateur
	 * @access public
	 * @param array $data Contients les informations du mail
	 * @return void
	 */

	public  function sendMailToOneUser($data) {

	}


	/**
	 * Envoyer un mail à tous les utilisateurs
	 * @access public
	 * @param array $data Contients les informations du mail
	 * @return void
	 */

	public  function sendMailToAllUsers($data) {

	}


}
?>
